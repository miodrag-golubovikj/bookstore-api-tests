name: FakeRestAPI Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # 1. Checkout code
    - name: Checkout code
      uses: actions/checkout@v3

    # 2. Set up Docker
    - name: Set up Docker
      uses: docker/setup-buildx-action@v2

    # 3. Build Docker image
    - name: Build Docker image
      run: docker build -t fake-restapi-tests .

    # 4. Run tests in container (keep container after exit)
    - name: Run tests in container
      run: docker run --name test-runner fake-restapi-tests || true

    # 5. Copy Allure results (always run)
    - name: Copy Allure results
      if: always()
      run: |
        mkdir -p allure-results
        docker cp test-runner:/app/reports/allure-results ./allure-results || echo "No allure results found"
        echo "Contents of allure-results:"
        ls -R allure-results || echo "No allure-results directory found"

    # 6. Upload Allure results as artifact (always run)
    - name: Upload Allure results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: allure-results
        path: allure-results

    # 7. Install Allure CLI (fail if install fails)
    - name: Install Allure CLI
      id: install_allure
      if: always()
      run: |
        set -e
        sudo apt-get update
        sudo apt-get install -y default-jre unzip wget curl
        LATEST_URL=$(curl -s https://api.github.com/repos/allure-framework/allure2/releases/latest \
          | grep browser_download_url \
          | grep zip \
          | cut -d '"' -f 4)
        if [ -z "$LATEST_URL" ]; then
          echo "Failed to get Allure download URL"
          exit 1
        fi
        echo "Downloading Allure from $LATEST_URL"
        wget "$LATEST_URL" -O allure.zip
        unzip allure.zip -d /opt/allure
        sudo ln -s /opt/allure/allure-*/bin/allure /usr/local/bin/allure
        allure --version

    # 8. Generate Allure HTML report (only if install succeeded)
    - name: Generate Allure HTML report
      id: generate_report
      if: steps.install_allure.outcome == 'success'
      run: |
        if [ -d "allure-results" ] && [ "$(ls -A allure-results)" ]; then
          mkdir -p allure-report
          allure generate allure-results --clean -o allure-report
        else
          echo "⚠️ No Allure results found, creating placeholder report"
          mkdir -p allure-report
          echo "<html><body><h1>No Allure results found</h1></body></html>" > allure-report/index.html
        fi

    # 9. Deploy to GitHub Pages (only if report was generated)
    - name: Deploy Allure report to GitHub Pages
      if: steps.generate_report.outcome == 'success'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: allure-report
        publish_branch: gh-pages